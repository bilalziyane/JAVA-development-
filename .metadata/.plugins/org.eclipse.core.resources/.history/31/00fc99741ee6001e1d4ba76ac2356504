import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;

public class ChatServer extends JFrame {
    private JTextArea messagesArea;
    private JTextField messageInput;
    private JButton sendButton;
    private ServerSocket serverSocket;

    public ChatServer() {
        try {
            setTitle("ChatApp");
            serverSocket = new ServerSocket(12346);

            setLayout(new BorderLayout());
            messagesArea = new JTextArea();
            messagesArea.setEditable(false);
            add(new JScrollPane(messagesArea), BorderLayout.CENTER);

            Box box = Box.createHorizontalBox();
            add(box, BorderLayout.SOUTH);
            messageInput = new JTextField();
            sendButton = new JButton("Send");
            box.add(messageInput);
            box.add(sendButton);

            sendButton.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    try {
                        String msg = messageInput.getText();
                        messagesArea.append("You: " + msg + "\n"); // Display sent message
                        for (PrintWriter writer : writers) {
                            writer.println(msg);
                        }
                        messageInput.setText("");
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            });

            new Thread(new Runnable() {
                public void run() {
                    try {
                        while (true) {
                            Socket clientSocket = serverSocket.accept();
                            new Thread(new ClientHandler(clientSocket)).start();
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }).start();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private class ClientHandler implements Runnable {
        private Socket clientSocket;
        private PrintWriter out;

        public ClientHandler(Socket socket) {
            this.clientSocket = socket;
        }

        public void run() {
            try {
                BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
                out = new PrintWriter(clientSocket.getOutputStream(), true);
                writers.add(out);

                String msg;
                while ((msg = in.readLine()) != null) {
                    messagesArea.append("Client: " + msg + "\n"); // Display received message
                }

                writers.remove(out);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    private java.util.List<PrintWriter> writers = new java.util.ArrayList<>();

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                ChatServer server = new ChatServer();
                server.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                server.setSize(400, 300);
                server.setVisible(true);
            }
        });
    }
}
